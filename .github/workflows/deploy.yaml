name: Docker Deployment
on:
  push:
    branches:
      - main
      - v0.9
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
jobs:
  docker:
    name: Docker (AWS ECR)
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Project Version
        id: version
        run: echo "version=$(cat package.json | jq -r '.version')" >> $GITHUB_OUTPUT

      - name: Setup ECR Authentication
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Create Docker metadata
        id: metadata
        uses: docker/metadata-action@v5
        env: 
          REGISTRY: ${{ steps.ecr.outputs.registry }}
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value={{sha}},enable=${{ github.ref_type != 'tag' }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Push to Amazon ECR
        uses: docker/build-push-action@v5
        with:
          context: '{{defaultContext}}:docker'
          build-args: |
            USER_AGENT: App/${{ steps.version.outputs.version }} Subreddit Sidebar by /u/bruxc (bruxc@sunsreddit.net)
            VERSION: ${{ steps.version.outputs.version }}

          cache-from: type=registry,ref=${{ steps.ecr.outputs.registry }}/${{ env.IMAGE_NAME }}
          cache-to: type=gha,mode=max
          labels: ${{ steps.metadata.outputs.labels }}
          tags: ${{ steps.metadata.outputs.tags }}
          platforms: linux/amd64
          push: true

      # - name: Tag Docker image
      #   run: docker tag ${REPOSITORY_NAME}:${VERSION} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${REPOSITORY_NAME}:latest

      # - name: Push Docker image to AWS ECR
      #   run: docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${REPOSITORY_NAME}:latest
